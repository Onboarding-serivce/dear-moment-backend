# 애플리케이션 설정
SPRING_APPLICATION_NAME=your-application-name
# 애플리케이션 이름을 입력하세요. 예: my-app

# 데이터베이스 설정
SPRING_DATASOURCE_URL=jdbc:oracle:thin:@<host>:<port>/<database>
# 데이터베이스의 연결 URL을 입력하세요.
# <host>는 데이터베이스 서버 주소, <port>는 포트 번호, <database>는 데이터베이스 이름으로 대체하세요.
# 예: jdbc:oracle:thin:@localhost:1521/XEPDB1

SPRING_DATASOURCE_USERNAME=your-database-username
# 데이터베이스 사용자 이름을 입력하세요. 예: db-user

SPRING_DATASOURCE_PASSWORD=your-database-password
# 데이터베이스 비밀번호를 입력하세요. 예: db-password

SPRING_DATASOURCE_DRIVER_CLASS_NAME=oracle.jdbc.OracleDriver
# 데이터베이스 드라이버 클래스를 입력하세요.
# Oracle 데이터베이스를 사용하는 경우 기본값은 `oracle.jdbc.OracleDriver`입니다.

# JPA 설정
SPRING_JPA_HIBERNATE_DDL_AUTO=update
# JPA가 데이터베이스 스키마를 처리하는 방식을 설정하세요.
# 가능한 값: none, validate, update, create, create-drop
# - none: 스키마 변경 없음
# - validate: 기존 스키마를 검증
# - update: 엔티티 변경 사항을 기존 스키마에 반영
# - create: 애플리케이션 실행 시 스키마 생성
# - create-drop: 실행 시 스키마를 생성하고 애플리케이션 종료 시 삭제
# 일반적으로 개발 환경에서는 `update`를 사용합니다.

SPRING_JPA_SHOW_SQL=true
# SQL 로그를 출력하려면 `true`로 설정하세요.
# SQL 실행문을 콘솔에 출력합니다. (디버깅 시 유용)
