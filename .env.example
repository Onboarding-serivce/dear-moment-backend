# .envexample
#
# 이 파일은 Docker를 활용한 개발 환경 구성을 처음부터 안내하기 위한 예시입니다.
# 실제 사용 시 `.env` 파일로 이름을 변경하거나, 필요한 부분만 골라 사용하세요.
#
# ------------------------------------------------------------------
# 0) Mac/Linux 환경에서 Docker 설치 (간략 안내)
# ------------------------------------------------------------------
#
# [macOS]
#   - Docker Desktop for Mac 설치
#   - 설치 후 'docker --version'으로 확인
#   - Docker Desktop 실행 (메뉴 막대 아이콘 등으로 확인)
#
# [Linux (Ubuntu/Debian 예시)]
#   - sudo apt-get update
#   - sudo apt-get install ca-certificates curl gnupg lsb-release
#   - sudo mkdir -p /etc/apt/keyrings
#   - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
#   - echo \
#       "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
#       $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
#   - sudo apt-get update
#   - sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
#   - docker --version (설치 확인)
#   - 필요 시 sudo usermod -aG docker $USER 로 권한 추가
#
# ------------------------------------------------------------------
# 1) Docker Compose를 이용해 개발 환경 구성하기
# ------------------------------------------------------------------
#   - git clone <레포지토리> && cd <프로젝트 폴더>
#   - (필요하다면) 본 파일(.envexample)을 .env로 복사/수정
#   - docker-compose up -d --build  (처음 한 번 빌드)
#   - 이후 소스 변경 시 docker-compose down && docker-compose up -d
#     로 빠르게 재시작 가능
#
#   * 주의) 오라클DB 초기화나 계정 충돌 시:
#       docker-compose down -v  (볼륨까지 삭제) 후 다시 올리면
#       ORACLE_PASSWORD, APP_USER, APP_USER_PASSWORD가 새로 반영됨
#
# ------------------------------------------------------------------
# 2) .env 파일 예시: Spring, Oracle 계정, JPA 설정
# ------------------------------------------------------------------

# -----------------------------------
# Spring Boot 기본 설정
# -----------------------------------
SPRING_PROFILES_ACTIVE=dev
SPRING_APPLICATION_NAME=demo
  
  # -----------------------------------
  # 앱 계정 접속 정보 (Oracle)
  # -----------------------------------
SPRING_DATASOURCE_URL=jdbc:oracle:thin:@db:1521/FREEPDB1
SPRING_DATASOURCE_USERNAME=spring_user
SPRING_DATASOURCE_PASSWORD=spring_password
SPRING_DATASOURCE_DRIVER_CLASS_NAME=oracle.jdbc.OracleDriver
  
  # -----------------------------------
  # JPA 설정
  # -----------------------------------
SPRING_JPA_HIBERNATE_DDL_AUTO=update
SPRING_JPA_SHOW_SQL=true
SPRING_JPA_DATABASE_PLATFORM=org.hibernate.dialect.OracleDialect
  
  # -----------------------------------
  # Oracle 관리자 계정 (SYS, SYSTEM)
  # -----------------------------------
ORACLE_PASSWORD=oracle_password
  
  # -----------------------------------
  # 새로 생성될 애플리케이션용 계정
  # -----------------------------------
APP_USER=spring_user
APP_USER_PASSWORD=spring_password

# ------------------------------------------------------------------
# 오라클 계정 중복 문제 주의사항
# ------------------------------------------------------------------
# 기존 DB 볼륨에 동일한 계정(spring_user)이나 PDB가 이미 생성되어 있다면,
# 새로 지정한 사용자/비밀번호가 무시되거나 충돌(ORA-xxxx) 날 수 있습니다.
#
# 1) DB 완전 초기화:
#    docker-compose down -v
#    => 기존 데이터 제거 후 다시 올리면
#       ORACLE_PASSWORD, APP_USER, APP_USER_PASSWORD가 새로 반영됨
#
# 2) 기존 DB 유지:
#    - 이미 계정이 있을 경우, docker-compose 환경변수를 변경해도
#      실제 DB에는 반영 안 될 수 있음(이미 초기화된 상태).
#    - 관리자 계정으로 수동 접근(ALTER USER ...) 해야 할 수도 있음.
